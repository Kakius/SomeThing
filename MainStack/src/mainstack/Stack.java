
package mainstack;
/*
1) addE — метод, который обеспечит добавление элемента (в top позиции)
2) deleteE — метод, которых обеспечит удаление элемента (с top позиции)
3) readTopElemen — метод, который вернет значение элемента, который находится в позиции top
4) isEmpty — метод, который будет проверять стек на пустоту
5) isFull — метод, который будет проверять, не переполнен наш массив, в котором мы сохраняем стек
*/

public class Stack {
    private int maxSize; //максимальный размер, который будет вводится самим пользователем.
    private int[] stackArray;
    private int top;

    public Stack(int m) {
        this.maxSize = m; //для удобства будем использовать сокращение в виде m
        stackArray = new int[maxSize];
        top = -1;
    }
    //добовление элеменрта
    public void addE(int element) {
    //увеличиваем индекс массива и добавляем на указанную позицию переданный элемент.
    //сначал выполняется ++top затем добовляется эелемент
        stackArray[++top] = element; 
    }
    //удаление элемента
    public int deleteE() {
        return stackArray[top--];
    //уменьшим идекс массива мы удаляем элемент массива
    //а последний элемент удалит GC
    }
    public int readTopElemen() {
        return stackArray[top];
    //возвращает значение элемента, который находится в позиции top
    }
    public boolean isEmpty() {
        return (top == -1);
    //будет возвращается true, если стек массива пустой
    }
    public boolean isFull() {
        
        return (top == maxSize - 1);
    //будет возращать true, если стек будет заполнен.
    //maxSize - 1: так как, если максимальный размер стека будет 10, то максимальный его элемент будет под индексом 9.
    }
    
}
